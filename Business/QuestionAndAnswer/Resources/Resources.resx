<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="AnswersCount" xml:space="preserve">
    <value>Number of Answers</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="CorrectAnswerCount" xml:space="preserve">
    <value>Number of correct answers</value>
  </data>
  <data name="FlagStatus" xml:space="preserve">
    <value>Flag Status</value>
  </data>
  <data name="IsCorrectAnswer" xml:space="preserve">
    <value>Is correct answer</value>
  </data>
  <data name="IsManual" xml:space="preserve">
    <value>Manually edited</value>
  </data>
  <data name="LastModifiedByUser" xml:space="preserve">
    <value>Last modified by</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="QuestionCategory" xml:space="preserve">
    <value>Question Category</value>
  </data>
  <data name="QuestionLink" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="QuestionLinks" xml:space="preserve">
    <value>Links</value>
    <comment>As in world wide web links</comment>
  </data>
  <data name="Questions" xml:space="preserve">
    <value>Questions</value>
  </data>
  <data name="QuestionType" xml:space="preserve">
    <value>Question Type</value>
  </data>
  <data name="Runs" xml:space="preserve">
    <value>Runs</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="AdditionalInformation" xml:space="preserve">
    <value>Additional Information</value>
  </data>
  <data name="AvailableCategories" xml:space="preserve">
    <value>Available Categories</value>
  </data>
  <data name="ContentFlaggedBy" xml:space="preserve">
    <value>Flagged By</value>
  </data>
  <data name="ContentFlags" xml:space="preserve">
    <value>Content Flaggings</value>
  </data>
  <data name="ContentIsFlagged" xml:space="preserve">
    <value>Flagged</value>
  </data>
  <data name="ContentManagement" xml:space="preserve">
    <value>Content Management</value>
  </data>
  <data name="ContentSourcesAndImports" xml:space="preserve">
    <value>Content Sources &amp; Imports</value>
  </data>
  <data name="CreateQuestion" xml:space="preserve">
    <value>Create Question</value>
  </data>
  <data name="FlagContent" xml:space="preserve">
    <value>Flag</value>
    <comment>Verb</comment>
  </data>
  <data name="FlaggedContent" xml:space="preserve">
    <value>Flagged Content</value>
  </data>
  <data name="HasActiveFlags" xml:space="preserve">
    <value>Has Active Flaggings</value>
  </data>
  <data name="HideAnswer" xml:space="preserve">
    <value>Hide Answer</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
  </data>
  <data name="NoQuestionsFound" xml:space="preserve">
    <value>No questions found.</value>
  </data>
  <data name="ShowAnswer" xml:space="preserve">
    <value>Show Answer</value>
  </data>
  <data name="StartTraining" xml:space="preserve">
    <value>Start Training</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="TheCorrectAnswer" xml:space="preserve">
    <value>The correct anwer is</value>
  </data>
  <data name="UnflagContent" xml:space="preserve">
    <value>Unflag</value>
  </data>
  <data name="AreYouSureYouWishToDeleteTheFollowingQuestion" xml:space="preserve">
    <value>Are you sure you wish to delete the following question?</value>
  </data>
  <data name="ExplanationOfIsManualWithParenthesis" xml:space="preserve">
    <value>(Manually edited questions will not be overwritten by automatic processes.)</value>
  </data>
  <data name="NoCategoriesAvailable" xml:space="preserve">
    <value>No categories available.</value>
  </data>
  <data name="YouHaveJavaScriptDisabled" xml:space="preserve">
    <value>You have JavaScript disabled. Here is the alternative content:</value>
  </data>
  <data name="Categories_Accusative" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Question_Accusative" xml:space="preserve">
    <value>Question</value>
  </data>
</root>