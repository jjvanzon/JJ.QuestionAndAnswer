@* ReSharper disable SuggestVarOrType_SimpleTypes*@

@model CategorySelectorViewModel

@section Title
{
    @CommonResourceFormatter.Select_WithName(ResourceFormatter.Categories_Accusative)
}

@section Header
{
    @Html.Partial(nameof(ViewNames._Login), Model.Login)
}

@using (Html.BeginForm())
{
    <h2>@CommonResourceFormatter.Select_WithName(ResourceFormatter.Categories_Accusative)</h2>

    if (Model.NoCategoriesAvailable)
    {
        <div id="divNoCategoriesAvailable">
            @ResourceFormatter.NoCategoriesAvailable
        </div>
    }
    else
    {
        @Html.ActionLinkWithCollection(
            ResourceFormatter.StartTraining,
            nameof(ActionNames.Random),
            nameof(ControllerNames.Questions),
            nameof(ActionParameterNames.c),
            Model.SelectedCategories.UnionRecursive(x => x.SubCategories).Where(x => x.Visible).Select(x => x.ID).ToArray())

        <table class="pane">
            <tr>
                <td class="col1of2">
                    <div id="divAvailableCategories"
                         ondragover="divAvailableCategories_onDragOver(event)"
                         ondrop="divAvailableCategories_onDrop(event)">

                        <h3>@ResourceFormatter.AvailableCategories</h3>

                        <ul class="category available">
                            @foreach (var availableCategory in Model.AvailableCategories)
                            {
                                @Html.Partial(nameof(ViewNames._AvailableCategory), availableCategory)
                            }
                        </ul>
                    </div>
                </td>

                <td class="col2of2">
                    <div id="divSelectedCategories"
                         ondragover="divSelectedCategories_onDragOver(event)"
                         ondrop="divSelectedCategories_onDrop(event)">

                        <h3>@CommonResourceFormatter.Selection</h3>

                        <ul class="category selected">

                            @using (Html.BeginCollection(() => Model.SelectedCategories))
                            {
                                foreach (var selectedCategory in Model.SelectedCategories)
                                {
                                    @Html.Partial(nameof(ViewNames._SelectedCategory), selectedCategory)
                                }
                            }
                        </ul>
                    </div>
                </td>
            </tr>
        </table>
    }
}

@section Scripts
{
    <script>

        function liAvailableCategory_onDragStart(ev) {
            ev.dataTransfer.setData("liAvailableCategoryId", ev.target.id);
        }

        function divSelectedCategories_onDragOver(ev) {
            ev.preventDefault();
        }

        function divSelectedCategories_onDrop(ev) {
            ev.preventDefault();

            var elementId = ev.dataTransfer.getData("liAvailableCategoryId");

            addCategory(elementId);
        }

        function liSelectedCategory_onDragStart(ev) {
            ev.dataTransfer.setData("liSelectedCategoryId", ev.target.id);
        }

        function divAvailableCategories_onDragOver(ev) {
            ev.preventDefault();
        }

        function divAvailableCategories_onDrop(ev) {
            ev.preventDefault();

            var elementId = ev.dataTransfer.getData("liSelectedCategoryId");

            removeCategory(elementId);
        }

        $(document).ready(function() {
            $("li.category.available").dblclick(function(ev) {
                var elementId = ev.target.id;
                addCategory(elementId);
            });

            $("li.category.selected").dblclick(function(ev) {
                var elementId = ev.target.id;
                removeCategory(elementId);
            });
        });

        function removeCategory(elementId) {
            var element = document.getElementById(elementId);
            var categoryID = element.getAttribute("data-category-id");

            var url =
                '@Html.Raw(Url.ActionWithParams(nameof(ActionNames.Remove), nameof(ControllerNames.CategorySelector), nameof(ActionParameterNames.categoryID), ""))'; // Parameter value is added later.
            url = url + encodeURI(categoryID);

            window.document.forms[0].action = url;
            window.document.forms[0].submit();
        }

        function addCategory(elementId) {
            var element = document.getElementById(elementId);
            var categoryID = element.getAttribute("data-category-id");

            var url =
                '@Html.Raw(Url.ActionWithParams(nameof(ActionNames.Add), nameof(ControllerNames.CategorySelector), nameof(ActionParameterNames.categoryID), ""))'; // Parameter value is added later.
            url = url + encodeURI(categoryID);

            window.document.forms[0].action = url;
            window.document.forms[0].submit();
        };

    </script>
}