@model QuestionDetailsViewModel

@section Title
{
    @Titles.QuestionDetails
}

@section Header
{
    @Html.Partial(ViewNames._Login, Model.Login)
}

<h2>@Titles.QuestionDetails</h2>

<table>
    <colgroup>
        <col style="padding-right: 50px" />
        <col />
    </colgroup>
    <tr>
        <th>@PropertyDisplayNames.ID</th>
        <td>@Model.Question.ID</td>
    </tr>

    <tr>
        <th>@PropertyDisplayNames.Question</th>
        <td>@Model.Question.Text</td>
    </tr>
    <tr>
        <th>@PropertyDisplayNames.Answer</th>
        <td>@Model.Question.Answer</td>
    </tr>

    <tr>
        <th>@PropertyDisplayNames.IsActive</th>
        <td>@(Model.Question.IsActive ? CommonTitles.Yes : CommonTitles.No)</td>
    </tr>
    <tr>
        <th>@PropertyDisplayNames.Source</th>
        <td>
            @if (!String.IsNullOrEmpty(Model.Question.Source.Url))
            {
                <a href="@Model.Question.Source.Url" target="_blank">
                    @Model.Question.Source.Description
                </a>
            }
            else
            {
                @Model.Question.Source.Description
            }
        </td>
    </tr>
    <tr>
        <th>@Titles.Type</th>
        <td>@Model.Question.Type.Name</td>
    </tr>

    <tr>
        <th>@PropertyDisplayNames.Categories</th>
        <td>

            @foreach (var category in Model.Question.Categories.Select(x => x.Category))
            {
                <div>
                    @category.ID- 
                    @String.Join(@" \ ", category.NameParts)
                </div>
            }
                
            @if (Model.Question.Categories.Count == 0)
            {
                @CommonTitles.None
            }
        </td>
    </tr>
    <tr>
        <th>@Titles.Links</th>
        <td>
                
            @foreach (var link in Model.Question.Links)
            {
                @link.Description<text>:</text> <a href="@link.Url" target="_blank"> @link.Url</a>
                <br />
            }

            @if (Model.Question.Links.Count == 0)
            {
                @CommonTitles.None
            }
        </td>
    </tr>
    <tr>
        <th>@PropertyDisplayNames.LastModifiedByUser</th>
        <td>@Model.Question.LastModifiedBy</td>
    </tr>
    <tr>
        <th>@PropertyDisplayNames.IsManual</th>
        <td>
            @(Model.Question.IsManual ? CommonTitles.Yes : CommonTitles.No)

            @if (Model.Question.IsManual)
            {
                <br />
                @Messages.ExplanationOfIsManualWithParenthesis
            }
        </td>
    </tr>
</table>

<fieldset>
    <legend>@Titles.ContentFlags</legend>

    <table>
        <tr>
            <th>@Titles.HasActiveFlags</th>
            <td>@(Model.Question.IsFlagged ? CommonTitles.Yes : CommonTitles.No)</td>
        </tr>

        @foreach (var flag in Model.Question.Flags)
        {
            <tr>
                <th>@flag.FlaggedBy</th>
                <td>
                    <div>
                        @PropertyDisplayNames.DateTime
                        @flag.DateAndTime.ToString()
                    </div>
                    <div>
                        @PropertyDisplayNames.FlagStatus
                        @flag.Status.Description
                    </div>
                    <div>
                        @PropertyDisplayNames.Comment
                        @flag.Comment
                    </div>
                    <div>
                        @PropertyDisplayNames.LastModifiedByUser
                        @flag.LastModifiedBy
                    </div>
                </td>
            </tr>
        }
    </table>

</fieldset>

<p>
    @Html.ActionLink(CommonTitles.Edit, ActionNames.Edit, new { id = Model.Question.ID }) |
    @Html.ActionLink(CommonTitles.New, ActionNames.Create) |
    @Html.ActionLink(CommonTitles.Delete, ActionNames.Delete, new { id = Model.Question.ID }) |
    @Html.ActionLink(Titles.BackToList, ActionNames.Index)
</p>

